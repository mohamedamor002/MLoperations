name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Lint code
        run: |
          source venv/bin/activate
          black .  # Format code
          flake8 .  # Lint code

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Run tests
        run: |
          source venv/bin/activate
          pytest tests/

  start_servers:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Start MLflow server
        run: |
          source venv/bin/activate
          mlflow server --host 0.0.0.0 --port 5004 &
          echo "MLflow server started on port 5004"

      - name: Start FastAPI server
        run: |
          source venv/bin/activate
          uvicorn fastapi_app:app --host 0.0.0.0 --port 8000 &
          echo "FastAPI server started on port 8000"

      - name: Wait for servers to start
        run: |
          sleep 10  # Wait for servers to start (adjust as needed)

  train:
    runs-on: ubuntu-latest
    needs: start_servers
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Preprocess data
        run: |
          source venv/bin/activate
          python model_pipeline.py preprocess

      - name: Train model
        run: |
          source venv/bin/activate
          python model_pipeline.py train

  notify:
    runs-on: ubuntu-latest
    needs: train
    steps:
      - name: Send notification
        run: |
          echo "Pipeline execution completed successfully!"